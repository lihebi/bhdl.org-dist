{"componentChunkName":"component---src-templates-docs-js","path":"/docs/racket/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"racket-tutorial\" style=\"position:relative;\"><a href=\"#racket-tutorial\" aria-label=\"racket tutorial permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Racket Tutorial</h1>\n<p>This is a small guide to get you started on racket, so that you can comfortably\nprogramming in BHDL. You can always refer to the official racket guide and\nreference for full documents.</p>\n<h2 id=\"previous-writing\" style=\"position:relative;\"><a href=\"#previous-writing\" aria-label=\"previous writing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Previous Writing</h2>\n<p>There are three ways to run the code.</p>\n<p>First, you can run in command line. Run the top-level script:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">racket fitboard.rkt</code></pre></div>\n<p>And run the <code class=\"language-text\">test</code> submodule:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">raco test fitboard.rkt</code></pre></div>\n<p>Second, you can run in <a href=\"https://racket-lang.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Dr. Racket</a>. Open the file and\nclick <code class=\"language-text\">Run</code>. The <code class=\"language-text\">test</code> submodule will be run.</p>\n<p>Last, you can also run via Emacs. If you wonder how to do that, let me know.</p>\n<p>When you run the code, you will see some visualizations on REPL, and freerouting\nwindow will pop up, the KiCAD file will be output to <code class=\"language-text\">/tmp/bhdl/out.kicad_pcb</code>.</p>\n<p>The Dr. Racket REPL and Emacs REPL supports images. So you can view the image\nvia e.g.</p>\n<div class=\"gatsby-highlight\" data-language=\"lisp\"><pre class=\"language-lisp\"><code class=\"language-lisp\"><span class=\"token punctuation\">(</span><span class=\"token car\">Atom-pict</span> <span class=\"token punctuation\">(</span><span class=\"token car\">make-IC-atom</span> Arduino-Uno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">;; assuming whole is defined as in the example scripts</span>\n<span class=\"token punctuation\">(</span><span class=\"token car\">Composite-pict</span> whole<span class=\"token punctuation\">)</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#racket-tutorial\">Racket Tutorial</a></p>\n<ul>\n<li><a href=\"#previous-writing\">Previous Writing</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Racket Crash Course"}}},"pageContext":{"slug":"/docs/racket/"}},"staticQueryHashes":["3649515864"]}